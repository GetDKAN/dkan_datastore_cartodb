<?php

/**
 * @file
 * Module file for CartoDB integration.
 */

/**
 * Implements hook_menu().
 */
function dkan_datastore_cartodb_menu() {
  $items = array();
  // TODO: put in carto settings module.
  $items['admin/dkan/cartodb'] = array(
    'title' => 'DKAN CartoDB',
    'description' => 'Cartodb settings for DKAN.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dkan_datastore_cartodb_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Menu Callback for DKAN CartoDB settings.
 */
function dkan_datastore_cartodb_settings() {
  $client = dkan_datastore_cartodb_client();
  dkan_datastore_cartodb_heartbeat($client);
  $form = array();
  $form['dkan_datastore_cartodb_user'] = array(
    '#type' => 'textfield',
    '#title' => t('CartoDB Username'),
    '#default_value' => variable_get('dkan_datastore_cartodb_user', ''),
  );
  $form['dkan_datastore_cartodb_key'] = array(
    '#type' => 'textfield',
    '#title' => t('CartoDB API Key'),
    '#description' => t('Sign up for an API key at !url.', array('!url' => l(t('http://cartodb.com'), 'http://cartodb.com'))),
    '#default_value' => variable_get('dkan_datastore_cartodb_key', ''),
  );
  $form['dkan_datastore_cartodb_oauth_key'] = array(
    '#type' => 'textfield',
    '#title' => t('CartoDB OAuth Key'),
    '#description' => t('Sign up for an OAuth key at !url.', array('!url' => l(t('http://cartodb.com'), 'http://cartodb.com'))),
    '#default_value' => variable_get('dkan_datastore_cartodb_oauth_key', ''),
  );
  $form['dkan_datastore_cartodb_oauth_secret'] = array(
    '#type' => 'password',
    '#title' => t('CartoDB OAuth Secret'),
    '#description' => t('Sign up for an OAuth secret at !url.', array('!url' => l(t('http://cartodb.com'), 'http://cartodb.com'))),
    '#default_value' => variable_get('dkan_datastore_cartodb_oauth_secret', ''),
  );
  $form['dkan_datastore_cartodb_pass'] = array(
    '#type' => 'password',
    '#title' => t('CartoDB Password'),
    '#default_value' => variable_get('dkan_datastore_cartodb_pass', ''),
  );
  $form['dkan_datastore_cartodb_email'] = array(
    '#type' => 'textfield',
    '#title' => t('CartoDB Email'),
    '#default_value' => variable_get('dkan_datastore_cartodb_email', ''),
  );
  $form['dkan_datastore_cartodb_url'] = array(
    '#type' => 'textfield',
    '#description' => t('The URL at which your organition items are output. DO NOT include http://'),
    '#title' => t('CartoDB Custom url'),
    '#default_value' => variable_get('dkan_datastore_cartodb_url', ''),
  );
  $form['#submit'][] = 'dkan_datastore_cartodb_settings_submit';
  return system_settings_form($form);
}

/**
 * Submit callback for dkan_datastore_cartodb_settings form.
 */
function dkan_datastore_cartodb_settings_submit($form, $form_state) {
  // Deletes existing token file upon save so that new one can be generated.
  $tmp_file = sys_get_temp_dir() . '/' . $form_state['values']['dkan_datastore_cartodb_user'] . '.cartodbtempkey.txt';
  if (file_exists($tmp_file)) {
    unlink($tmp_file);
  }
}

/**
 * Creates message about whether or not client connects.
 */
function dkan_datastore_cartodb_heartbeat($client) {
  if ($client->authorized) {
    drupal_set_message(t('Successfully connected to CartoDB.'));
  }
  else {
    drupal_set_message(t('Could not connect to CartoDB.'), 'warning');
  }
}

/**
 * Implements hook_libraries_info().
 */
function dkan_datastore_cartodb_libraries_info() {
  // A very simple library. No changing APIs (hence, no versions), no variants.
  // Expected to be extracted into 'sites/all/libraries/simple'.
  $libraries['cartodbclient-php'] = array(
    'name' => 'CartoDB PHP Client',
    'vendor url' => 'https://github.com/Vizzuality/cartodbclient-php',
    'download url' => 'https://github.com/Vizzuality/cartodbclient-php',
    'files' => array(
      'php' => array('cartodb.class.php'),
    ),
    'version' => 'master',
  );
  return $libraries;
}

/**
 * Creates new CartoDB Client.
 */
function dkan_datastore_cartodb_client() {
  require_once libraries_get_path('cartodbclient-php') . '/cartodb.class.php';
  $config = array(
    'subdomain' => variable_get('dkan_datastore_cartodb_user', 'username'),
    'password' => variable_get('dkan_datastore_cartodb_pass', 'password'),
    'email' => variable_get('dkan_datastore_cartodb_email', 'account@domain.com'),
    'key' => variable_get('dkan_datastore_cartodb_oauth_key', 'key'),
    'secret' => variable_get('dkan_datastore_cartodb_oauth_secret', 'secret'),
  );
  return new CartoDBClient($config);
}

/**
 * Implements hook_theme_registry_alter().
 */
function dkan_datastore_cartodb_theme_registry_alter(&$theme_registry) {
  $theme_registry['recline_default_formatter']['theme path'] = drupal_get_path('module', 'dkan_datastore_cartodb');
  $theme_registry['recline_default_formatter']['function'] = 'dkan_datastore_cartodb_recline_default_formatter';
}

/**
 * Renders carto map if available.
 */
function dkan_datastore_cartodb_recline_default_formatter($vars) {
  $uuid = $vars['item']['entity']->uuid;
  $datastore = dkan_datastore_go($uuid);
  if ($datastore->viz_id) {

    $file = $vars['item'];

    $url = file_create_url($file['uri']);

    $icon = '';

    $format = recline_get_data_type($file['filemime']);

    // Set options as per anchor format described at
    // http://microformats.org/wiki/file-format-examples
    $options = array(
      'attributes' => array(
        'type' => $file['filemime'] . '; length=' . $file['filesize'],
        'data-format' => $format,
        'class' => array('format-label'),
      ),
    );

    // Use the description as the link text if available.
    if (empty($file['description'])) {
      $link_text = $file['filename'];
    }
    else {
      $link_text = $file->description;
      $options['attributes']['title'] = check_plain($file['filename']);
    }
    $file = l($file['filename'], $url, $options);

    $file_output = array(
      'download' => array(
        '#type' => 'markup',
        '#markup' => '<div class="download">' . $file . '</div>',
      ),
    );
    $output = drupal_render($file_output);
    $url = variable_get('dkan_datastore_cartodb_url', '');
    $output .= "<iframe width='100%' height='520' frameborder='0' src='//" . $url . "/viz/" . $datastore->viz_id  . "/embed_map?title=true&description=true&search=false&shareable=true&cartodb_logo=true&layer_selector=false&legends=false&scrollwheel=true&fullscreen=true&sublayer_options=1%7C1' allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>";
    return $output;
  }
  else {
    return theme_recline_default_formatter($vars);
  }
}
